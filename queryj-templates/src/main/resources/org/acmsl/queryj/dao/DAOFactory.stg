//;-*- mode: antlr -*-
//
//                      QueryJ
//
//  Copyright (C) 2002-today  ACM-SL
//                           chous@acm-sl.org
//
//  This library is free software; you can redistribute it and/or
//  modify it under the terms of the GNU General Public
//  License as published by the Free Software Foundation; either
//  version 2 of the License, or any later version.
//
//  This library is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
//  General Public License for more details.
//
//  You should have received a copy of the GNU General Public
//  License along with this library; if not, write to the Free Software
//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
//
//  Thanks to ACM S.L. for distributing this library under the GPL license.
//  Contact info: jose.sanleandro@acm-sl.com
//  Postal Address: c/Playa de Lagoa, 1
//                  Urb. Valdecabanas
//                  Boadilla del monte
//                  28660 Madrid
//                  Spain
//
//***************************************************************************
//
// Filename: DAOFactory.stg
//
// Author: Jose San Leandro Armendariz
//
// Description: Defines the rules to generate DAOFactory database-based
//              implementations.
//
group DAO;

import "../queryj.stg"

source(C) ::= <<
<!
  Generates a DAOFactory database implementation source file.
!>
<sourceImpl(table=C.table, C=C)>
>>

sourceImpl(table, C) ::= <<
<!
  Generates a DAOFactory database implementation source file.
  @param table the table.
  @param C the context.
!>
<if(C.header)>
<C.header>
<else>
<java_header(
  year=C.current_year,
  description=
  [
    first_line_description(
      tableName=table.name,
      engineName=C.engine_name,
      engineVersion=C.engine_version)
  ]:{line |<line>}; separator="\n * ",
  timestamp=C.timestamp)><endif>
<if(C.generation_timestamps_enabled)>
// Generated by QueryJ using org/acmsl/queryj/dao/DAOFactory.stg at <C.timestamp>
<else>
// Generated by QueryJ using org/acmsl/queryj/dao/DAOFactory.stg
<endif>

<package_declaration(p=C.package)>

<checkers_import()>

/*
 * Importing some JDK classes.
 */
import java.util.Map;

/*
 * Importing some JDK extension classes
 */
import javax.sql.DataSource;

/*
 * Importing Jakarta Commons Logging classes
 */
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

<class(table=table, C=C)>
>>

first_line_description(tableName, engineName, engineVersion) ::= <<
<!
  Generates a description for the generated file.
  @param tableName the table name.
  @param engineName the engine name.
  @param engineVersion the engine version.
!>
<tableName>-specific DAOFactory implementation.
>>

class(table, C) ::= <<
<!
 Generates the class body.
 @param engine_name the engine name.
 @param engine_version the engine version.
 @param timestamp the timestamp.
 @param custom_results the results for the custom queries.
 @param repository the table repository name.
 @param table the table.
!>
<classImpl(table=table, repository=C.repository, C=C)>
>>

classImpl(table, repository, C) ::= <<
<!
 Generates the class body.
 @param table the table.
 @param repository the table repository name.
 @param C the context.
!>
/**
 * <[
      first_line_description(
        tableName=table.name,
        engineName=C.engine_name,
        engineVersion=C.engine_version)
    ]:{line |<line>}; separator="\n * ">
<class_common_javadoc(
  template="org/acmsl/queryj/dao/DAOFactory.stg",
  generation_timestamps_allowed=C.generation_timestamps_allowed,
  timestamp=C.timestamp)>
 */
public class <C.engine_name><table.voName>DAOFactory
<!//              <repository.capitalized>TableRepository!>
{
}
>>
