//;-*- mode: antlr -*-
//
//                      QueryJ
//
//  Copyright (C) 2002-today  ACM-SL
//                           chous@acm-sl.org
//
//  This library is free software; you can redistribute it and/or
//  modify it under the terms of the GNU General Public
//  License as published by the Free Software Foundation; either
//  version 2 of the License, or any later version.
//
//  This library is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
//  General Public License for more details.
//
//  You should have received a copy of the GNU General Public
//  License along with this library; if not, write to the Free Software
//  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
//
//  Thanks to ACM S.L. for distributing this library under the GPL license.
//  Contact info: jose.sanleandro@acm-sl.com
//  Postal Address: c/Playa de Lagoa, 1
//                  Urb. Valdecabanas
//                  Boadilla del monte
//                  28660 Madrid
//                  Spain
//
//***************************************************************************
//
// Filename: type_checkers.stg
//
// Author: Jose San Leandro Armendariz
//
// Description: Defines the common templates dealing with type checkers.
//
group type_checkers;

notnull() ::= <<
<! Conditionally add @NotNull annotations. !>
<if(notnull_annotations_enabled)> @NotNull <else> <endif>
>>

notnull_arg_single_line() ::= <<
<! Conditionally add @NotNull annotations. !>
<if(notnull_annotations_enabled)>@NotNull <endif>
>>

notnull_method() ::= <<
<! Conditionally add @NotNull annotations. !>
<if(notnull_annotations_enabled)> @NotNull <else>
<endif>
>>

nullable() ::= <<
<if(notnull_annotations_enabled)> @Nullable <else><endif>
>>

type_checker(attribute) ::= <<
<!
 Type checker for given attribute
 @param attribute the attribute.
!><if(attribute.nullable)><nullable()><else><if(!attribute.primitive)><notnull()><endif><endif>
>>

checkers_import() ::= <<
>>

checkers_import_enabled() ::= <<
/*
 * Importing JSR-308 (http://types.cs.washington.edu/checker-framework/) annotations.
 */
import checkers.nullness.quals.NonNull;
import checkers.nullness.quals.Nullable;
>>