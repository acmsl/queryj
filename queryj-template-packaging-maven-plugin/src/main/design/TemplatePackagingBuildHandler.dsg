- Create a new Java abstract class TemplatePackagingBuildHandler in folder src/main/java/org/acmsl/queryj/templates/packaging/handlers;
- Add comment: Base build handler for Template Packaging templates.;
  - Add class parameters:
    - T extends TemplatePackagingTemplate<C>;
    - TF extends TemplatePackagingTemplateFactory<T, C>;
    - C extends TemplatePackagingContext;
  - Make it implement QueryJCommandHandler<QueryJCommand>;
  - Make it implement TemplatePackagingSettings;
- Implement a default constructor.
- Override the handle(QueryJCommand) method:
  - Call buildTemplate(parameters);
  - If the template is null, throw a RuntimeException and annotate a TODO item;
  - Otherwise, call storeTemplate(template, parameters);
  - return false;
- Create a method buildTemplate(QueryJCommand):
  - call buildTemplate(retrieneTemplateFactory(), buildContext(parameters));;
- Create a method buildTemplate(TF, C):
  - call factory.createTemplate(context);
- Declare a new abstract method TF retrieveTemplateFactory();
- Declare a new abstract method C buildContext(QueryJCommand);
- Declare a new abstract method storeTemplate(T, QueryJCommand),
- Implement a new method retrieveProjectPackage(QueryJCommand):
  - Retrieve the value from the command, under the key PROJECT_PACKAGE;
  - If the value is null, throw a RuntimeException and annotate a TODO item;
- Fix import groups;
