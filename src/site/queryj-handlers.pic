.PS
define triangle { line from $1 down $2*sqrt(3)*0.5 left $2*0.5 then right $2*0.5; B: line right $2*0.5; line to $1 };
define diamond { [ A: line from $1 down $2*sqrt(2)*0.5 left $2*sqrt(2)*0.5; B: line right $2*sqrt(2)*0.5 down $2*sqrt(2)*0.5; C: line right $2*sqrt(2)*0.5 up $2*sqrt(2)*0.5; D: line to $1 ] };
ANT_COMMAND_HANDLER: box wid 1.8 "AntCommandHandler";
TRI1: triangle( bottom of last box, 0.2 );
ABSTRACT_ANT_COMMAND_HANDLER:
[  box wid 2.2 "AbstractAntCommandHandler"
] with .n at last box.s - (0, 0.5);
move to TRI1.s;
line dashed down TRI1.s.y - ABSTRACT_ANT_COMMAND_HANDLER.n.y;
move to ABSTRACT_ANT_COMMAND_HANDLER.s;
move left from 1/4 of the way between ABSTRACT_ANT_COMMAND_HANDLER.w and ABSTRACT_ANT_COMMAND_HANDLER.e;
move right 0.1;
move down 0.75;
#line down 0.5;
L1: line right 0.3;
line up 0;
INVIS1: [ box invis wid 0 "" ];# with .s at ABSTRACT_ANT_COMMAND_HANDLER.s;
TRI2: triangle( INVIS1.n, 0.2 );
move down 0.5;
INVIS2: [ box invis wid 0 "" ];
line from TRI2.s down TRI2.s.y - INVIS2.n.y;
L2: line right 0.3;
move to L1.w;
line down 0.2;
move to L2.e;
line down 0.2;
move to L2.w;
box invis ". . .";
move to (3/4 of the way between ABSTRACT_ANT_COMMAND_HANDLER.w and ABSTRACT_ANT_COMMAND_HANDLER.e, ABSTRACT_ANT_COMMAND_HANDLER.s);
INVIS3: [ box invis wid 0 "" ];
TRI3: triangle( INVIS3.n, 0.2 );
move down 1;
INVIS4: [ box invis wid 0 "" ];
L3: line from TRI3.s down TRI3.s.y - INVIS4.n.y;
COMPOSITE: box wid 2.5 "CompositeAntCommandHandler";
#move to (COMPOSITE.e.x + 0.1*sqrt(2), 1/4 of the way between COMPOSITE.se and COMPOSITE.ne);

INVIS5: [ box invis wid 0 ht 0 "" ] at (COMPOSITE.e.x + 0.1*sqrt(2), COMPOSITE.e.y + 0.1*sqrt(3));
DIAMOND: diamond( INVIS5.e, 0.2 );
L5: arrow left 1 + 0.3*sqrt(2) at (ANT_COMMAND_HANDLER.e.x + 1 + 0.3*sqrt(2), ANT_COMMAND_HANDLER.e.y);
line from (DIAMOND.D.x, DIAMOND.D.y) to (L5.e.x, DIAMOND.D.y);
line from (L5.e.x, DIAMOND.D.y) to (L5.e.x, L5.e.y);

move to (COMPOSITE.s.x, COMPOSITE.s.y - 0.1*sqrt(3));
move down 0.5 - 0.1*sqrt(3);
INVIS6: [ box invis wid 0 "" ];
TRI4: triangle( COMPOSITE.s, 0.2 );
line from TRI4.s down TRI4.s.y - INVIS6.n.y;
L7: line right (COMPOSITE.wid / 4);
line down 0.2;
move to L7.e;
line down 0.2;
box invis ". . ." at ( L7.w.x + COMPOSITE.wid / 8, L7.s.y - 0.2);

move to L7.w;
line left (COMPOSITE.wid / 4);
line down 0.4;

TEMPLATE_HANDLER_BUNDLE: box wid 2.0 "TemplateHandlerBundle";
move to (TEMPLATE_HANDLER_BUNDLE.s.x, TEMPLATE_HANDLER_BUNDLE.s.y - 0.1*sqrt(3));
move down 0.5 - 0.1*sqrt(3);
INVIS7: [ box invis wid 0 "" ];
TRI8: triangle( TEMPLATE_HANDLER_BUNDLE.s, 0.2 );
line from TRI8.s down TRI8.s.y - INVIS7.n.y;
L8: line right 0.4;
line down 0.2;
move to L8.w;
line left 0.4;
line down 0.2;
box invis ". . ." at ( L8.w.x, L8.s.y - 0.2);

move to TEMPLATE_HANDLER_BUNDLE.w;
move left 2;
TEMPLATE_BUILD_HANDLER: box wid 1.8 "TemplateBuildHandler";
arrow from TEMPLATE_HANDLER_BUNDLE.w to TEMPLATE_BUILD_HANDLER.e;

move to TEMPLATE_HANDLER_BUNDLE.w;
move left 1.1;
move down 1;
TEMPLATE_WRITING_HANDLER: box wid 1.8 "TemplateWritingHandler";
arrow from TEMPLATE_HANDLER_BUNDLE.w to TEMPLATE_WRITING_HANDLER.n;

TEMPLATE_HANDLER: box wid 1.5 "TemplateHandler" at (TEMPLATE_BUILD_HANDLER.e.x, ABSTRACT_ANT_COMMAND_HANDLER.e.y);
L9: line from TEMPLATE_HANDLER.n to (TEMPLATE_HANDLER.n.x, TRI1.y - 0.1*sqrt(3) - (TRI1.y - 0.1*sqrt(3) - ABSTRACT_ANT_COMMAND_HANDLER.n.y)/2);
line from L9.n to (ANT_COMMAND_HANDLER.s.x, TRI1.y - 0.1*sqrt(3) - (TRI1.y - 0.1*sqrt(3) - ABSTRACT_ANT_COMMAND_HANDLER.n.y)/2);

TRI9: triangle( TEMPLATE_HANDLER.s, 0.2 );

L10: line from (TRI9.s.x, TRI9.s.y) to (TRI9.s.x, TRI9.s.y - 0.2*sqrt(3));
L11: line from (TEMPLATE_BUILD_HANDLER.n.x, TEMPLATE_BUILD_HANDLER.n.y) to (TEMPLATE_BUILD_HANDLER.n.x, L10.s.y);
L12: line from (L11.n.x, L11.n.y) to (TEMPLATE_WRITING_HANDLER.n.x, L11.n.y);
L12: line from (TEMPLATE_WRITING_HANDLER.n.x, L11.n.y) to (TEMPLATE_WRITING_HANDLER.n.x, TEMPLATE_WRITING_HANDLER.n.y);
.PE
